// prisma/schema.prisma

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Usuario {
  id                      String    @id @default(uuid())
  email                   String    @unique
  fullName                String
  password                String
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  roleId                  String?
  sellerId                String?
  habilitationStatus      String?
  cpf                     String?
  dateOfBirth             DateTime?
  razaoSocial             String?
  cnpj                    String?
  inscricaoEstadual       String?
  website                 String?
  cellPhone               String?
  zipCode                 String?
  street                  String?
  number                  String?
  complement              String?
  neighborhood            String?
  city                    String?
  state                   String?
  optInMarketing          Boolean?
  badges                  String[]  @default([])

  role                Perfil?                 @relation(fields: [roleId], references: [id], onDelete: SetNull)
  documentos          DocumentoUsuario[]      @relation("UsuarioDocumentos")
  documentosAnalista  DocumentoUsuario[]      @relation("AnalistaDocumentos")
  lances              Lance[]
  arremates           Arremate[]
  vendasDiretas       VendaDireta[]
  vendedor            Vendedor?               @relation(fields: [sellerId], references: [id], onDelete: SetNull)
  leiloeiro           Leiloeiro?
  maxBids             UserLotMaxBid[]
  avaliacoes          Review[]
  perguntas           LotQuestion[]
  respostas           LotQuestion[]           @relation("RespostasUsuario")
  postsBlog           PostBlog[]

  @@index([roleId])
  @@index([sellerId])
}


model Perfil {
  id              String      @id @default(uuid())
  name            String      @unique
  name_normalized String      @unique
  description     String?
  permissions     String[]
  usuarios        Usuario[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model DocumentoUsuario {
  id                String      @id @default(uuid())
  userId            String
  documentTypeId    String
  fileUrl           String
  fileName          String?
  status            String
  uploadDate        DateTime    @default(now())
  analysisDate      DateTime?
  analistaId        String?
  rejectionReason   String?

  usuario           Usuario         @relation("UsuarioDocumentos", fields: [userId], references: [id], onDelete: Cascade)
  tipoDocumento     TipoDocumento   @relation(fields: [documentTypeId], references: [id])
  analista          Usuario?        @relation("AnalistaDocumentos", fields: [analistaId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([userId, documentTypeId])
  @@index([userId])
  @@index([documentTypeId])
  @@index([analistaId])
}

model TipoDocumento {
  id              String                @id @default(uuid())
  name            String                @unique
  description     String?
  isRequired      Boolean               @default(true)
  aplicaA         String?               // Storing as comma-separated string: "PHYSICAL,LEGAL"
  formatos        String?               // Storing as comma-separated string: "pdf,jpg,png"
  displayOrder    Int                   @default(0)
  documentos      DocumentoUsuario[]
}

model Leilao {
  id                             String    @id @default(uuid())
  publicId                       String    @unique
  title                          String
  fullTitle                      String?
  description                    String?
  status                         String
  auctionType                    String?
  auctionDate                    DateTime
  endDate                        DateTime?
  etapas                         Json?     // Storing array as a single JSON object
  imageUrl                       String?
  imageMediaId                   String?
  documentsUrl                   String?
  evaluationReportUrl            String?
  auctionCertificateUrl          String?
  dataAiHint                     String?
  visits                         Int?      @default(0)
  totalLots                      Int?      @default(0)
  initialOffer                   Float?
  isFavorite                     Boolean?
  currentBid                     Float?
  bidsCount                      Int?      @default(0)
  sellingBranch                  String?
  vehicleLocation                String?
  isFeaturedOnMarketplace        Boolean?  @default(false)
  marketplaceAnnouncementTitle   String?
  automaticBiddingEnabled        Boolean?  @default(false)
  silentBiddingEnabled           Boolean?  @default(false)
  allowMultipleBidsPerUser       Boolean?  @default(true)
  allowInstallmentBids           Boolean?  @default(false)
  softCloseEnabled               Boolean?  @default(false)
  softCloseMinutes               Int?
  estimatedRevenue               Float?
  achievedRevenue                Float?
  totalHabilitatedUsers          Int?
  gatilhosMentais                String?   // Storing array as comma-separated string
  createdAt                      DateTime  @default(now())
  updatedAt                      DateTime  @updatedAt

  categoryId      String
  auctioneerId    String
  sellerId        String?
  judicialProcessId String?

  categoria       CategoriaLote       @relation(fields: [categoryId], references: [id])
  leiloeiro       Leiloeiro           @relation(fields: [auctioneerId], references: [id])
  vendedor        Vendedor?           @relation(fields: [sellerId], references: [id])
  processoJudicial ProcessoJudicial?   @relation(fields: [judicialProcessId], references: [id])
  imagemCapa      MediaItem?          @relation("LeilaoImagemCapa", fields: [imageMediaId], references: [id], onDelete: SetNull)
  
  lotes           Lote[]
  lances          Lance[]
  perguntas       LotQuestion[]

  @@index([categoryId])
  @@index([auctioneerId])
  @@index([sellerId])
  @@index([judicialProcessId])
  @@index([imageMediaId])
}

model Lote {
  id                              String    @id @default(uuid())
  publicId                        String    @unique
  title                           String
  number                          String?
  description                     String?
  price                           Float
  initialPrice                    Float?
  secondInitialPrice              Float?
  bidIncrementStep                Float?
  status                          String
  imageUrl                        String?
  imageMediaId                    String?
  winningBidTermUrl               String?
  dataAiHint                      String?
  views                           Int?      @default(0)
  bidsCount                       Int?      @default(0)
  isFeatured                      Boolean?  @default(false)
  isExclusive                     Boolean?  @default(false)
  discountPercentage              Float?
  gatilhosMentais                 String?   // Storing array as comma-separated string
  latitude                        Float?
  longitude                       Float?
  mapAddress                      String?
  mapEmbedUrl                     String?
  mapStaticImageUrl               String?
  judicialProcessNumber           String?
  courtDistrict                   String?
  courtName                       String?
  publicProcessUrl                String?
  propertyRegistrationNumber      String?
  propertyLiens                   String?
  knownDebts                      String?
  additionalDocumentsInfo         String?
  reservePrice                    Float?
  evaluationValue                 Float?
  debtAmount                      Float?
  itbiValue                       Float?
  endDate                         DateTime?
  lotSpecificAuctionDate          DateTime?
  secondAuctionDate               DateTime?
  condition                       String?
  createdAt                       DateTime  @default(now())
  updatedAt                       DateTime  @updatedAt

  auctionId           String
  categoryId          String?
  subcategoryId       String?
  stateId             String?
  cityId              String?
  sellerId            String?
  auctioneerId        String?
  
  bemIds              String[]

  leilao              Leilao              @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  categoria           CategoriaLote?      @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  subcategoria        Subcategoria?       @relation(fields: [subcategoryId], references: [id], onDelete: SetNull)
  estado              Estado?             @relation(fields: [stateId], references: [id], onDelete: SetNull)
  cidade              Cidade?             @relation(fields: [cityId], references: [id], onDelete: SetNull)
  vendedor            Vendedor?           @relation(fields: [sellerId], references: [id], onDelete: SetNull)
  leiloeiro           Leiloeiro?          @relation(fields: [auctioneerId], references: [id], onDelete: SetNull)
  imagemPrincipal     MediaItem?          @relation("LoteImagemPrincipal", fields: [imageMediaId], references: [id], onDelete: SetNull)
  
  lances              Lance[]
  arremates           Arremate[]
  avaliacoes          Review[]
  perguntas           LotQuestion[]
  maxBids             UserLotMaxBid[]
  bens                Bem[]               @relation(fields: [bemIds], references: [id])


  @@index([auctionId])
  @@index([categoryId])
  @@index([subcategoryId])
  @@index([stateId])
  @@index([cityId])
  @@index([sellerId])
  @@index([auctioneerId])
  @@index([imageMediaId])
}

model Bem {
  id              String      @id @default(uuid())
  publicId        String      @unique
  title           String
  description     String?
  status          String      // e.g., 'DISPONIVEL', 'LOTEADO', 'VENDIDO'
  evaluationValue Float?
  imageUrl        String?
  imageMediaId    String?
  dataAiHint      String?
  locationCity    String?
  locationState   String?
  address         String?
  latitude        Float?
  longitude       Float?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  judicialProcessId String?
  sellerId        String?
  categoryId      String
  subcategoryId   String?

  processoJudicial  ProcessoJudicial?   @relation(fields: [judicialProcessId], references: [id], onDelete: SetNull)
  vendedor          Vendedor?           @relation(fields: [sellerId], references: [id])
  categoria         CategoriaLote       @relation(fields: [categoryId], references: [id])
  subcategoria      Subcategoria?       @relation(fields: [subcategoryId], references: [id])
  
  lotes             Lote[]              @relation(fields: [id], references: [id]) // Correct many-to-many syntax

  // Vehicle specific
  plate             String?
  make              String?
  model             String?
  version           String?
  year              Int?
  modelYear         Int?
  mileage           Int?
  color             String?
  fuelType          String?
  transmissionType  String?
  bodyType          String?
  vin               String?
  renavam           String?
  enginePower       String?
  numberOfDoors     Int?
  vehicleOptions    String?
  detranStatus      String?
  debts             String?
  runningCondition  String?
  bodyCondition     String?
  tiresCondition    String?
  hasKey            Boolean?
  
  // Real estate specific
  propertyType              String?
  propertyRegistrationNumber String?
  iptuNumber                String?
  isOccupied                Boolean?
  area                      Float?
  bedrooms                  Int?
  bathrooms                 Int?
  parkingSpaces             Int?
  amenities                 String[]
  
  // Machinery specific
  serialNumber        String?
  hoursUsed           Int?
  engineType          String?
  capacityOrPower     String?
  
  // Livestock specific
  breed               String?
  age                 String?
  sex                 String?
  weight              String?
  vaccinationStatus   String?

  @@index([judicialProcessId])
  @@index([sellerId])
  @@index([categoryId])
  @@index([subcategoryId])
}


model Lance {
  id              String    @id @default(uuid())
  amount          Float
  timestamp       DateTime  @default(now())
  bidderDisplay   String
  
  lotId           String
  auctionId       String
  bidderId        String

  lote            Lote      @relation(fields: [lotId], references: [id], onDelete: Cascade)
  leilao          Leilao    @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  licitante       Usuario   @relation(fields: [bidderId], references: [id], onDelete: Cascade)

  @@index([lotId])
  @@index([auctionId])
  @@index([bidderId])
}


model Arremate {
  id                  String    @id @default(uuid())
  winningBidAmount    Float
  winDate             DateTime  @default(now())
  paymentStatus       String?
  invoiceUrl          String?
  
  lotId               String    @unique // An 'Arremate' is unique to one lot
  userId              String

  lote                Lote      @relation(fields: [lotId], references: [id])
  usuario             Usuario   @relation(fields: [userId], references: [id])

  @@index([lotId])
  @@index([userId])
}

model UserLotMaxBid {
  id          String    @id @default(uuid())
  userId      String
  lotId       String
  maxAmount   Float
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  usuario     Usuario   @relation(fields: [userId], references: [id], onDelete: Cascade)
  lote        Lote      @relation(fields: [lotId], references: [id], onDelete: Cascade)

  @@unique([userId, lotId])
  @@index([userId])
  @@index([lotId])
}


model ProcessoJudicial {
  id              String      @id @default(uuid())
  publicId        String      @unique
  processNumber   String      @unique
  isElectronic    Boolean     @default(true)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  courtId         String
  districtId      String
  branchId        String
  sellerId        String?
  
  tribunal        Tribunal    @relation(fields: [courtId], references: [id])
  comarca         Comarca     @relation(fields: [districtId], references: [id])
  vara            Vara        @relation(fields: [branchId], references: [id])
  vendedor        Vendedor?   @relation(fields: [sellerId], references: [id])
  
  leiloes         Leilao[]
  bens            Bem[]
  partes          ParteProcesso[]

  @@index([courtId])
  @@index([districtId])
  @@index([branchId])
  @@index([sellerId])
}

model ParteProcesso {
  id              String    @id @default(uuid())
  name            String
  documentNumber  String?
  partyType       String // AUTOR, REU, etc.
  
  processoJudicialId String
  processoJudicial  ProcessoJudicial @relation(fields: [processoJudicialId], references: [id], onDelete: Cascade)

  @@unique([processoJudicialId, name, partyType])
}


model Tribunal {
  id          String      @id @default(uuid())
  name        String      @unique
  slug        String      @unique
  stateUf     String
  website     String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  estado      Estado      @relation(fields: [stateUf], references: [uf])
  comarcas    Comarca[]
  processos   ProcessoJudicial[]
}

model Comarca {
  id          String      @id @default(uuid())
  name        String
  slug        String
  zipCode     String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  courtId     String
  stateId     String
  
  tribunal    Tribunal            @relation(fields: [courtId], references: [id])
  estado      Estado              @relation(fields: [stateId], references: [id])
  varas       Vara[]
  processos   ProcessoJudicial[]

  @@unique([name, stateId])
  @@index([courtId])
  @@index([stateId])
}

model Vara {
  id          String      @id @default(uuid())
  name        String
  slug        String
  contactName String?
  phone       String?
  email       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  districtId  String
  
  comarca     Comarca             @relation(fields: [districtId], references: [id])
  processos   ProcessoJudicial[]
  vendedores  Vendedor[]

  @@unique([name, districtId])
  @@index([districtId])
}


model CategoriaLote {
  id              String        @id @default(uuid())
  name            String        @unique
  slug            String        @unique
  description     String?
  itemCount       Int?
  hasSubcategories Boolean      @default(false)
  logoUrl         String?
  coverImageUrl   String?
  megaMenuImageUrl String?
  dataAiHintLogo  String?
  dataAiHintCover String?
  dataAiHintMegaMenu String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  subcategorias     Subcategoria[]
  leiloes           Leilao[]
  lotes             Lote[]
  bens              Bem[]
  vendasDiretas     VendaDireta[]
  postsBlog         PostBlog[]
}

model Subcategoria {
  id                String       @id @default(uuid())
  name              String
  slug              String
  description       String?
  displayOrder      Int?
  itemCount         Int?
  iconUrl           String?
  iconMediaId       String?
  dataAiHintIcon    String?
  
  parentCategoryId  String
  categoriaPrincipal CategoriaLote @relation(fields: [parentCategoryId], references: [id])

  lotes             Lote[]
  bens              Bem[]

  @@unique([parentCategoryId, slug])
  @@index([parentCategoryId])
}


model Vendedor {
  id              String      @id @default(uuid())
  publicId        String      @unique
  name            String      @unique
  slug            String      @unique
  isJudicial      Boolean     @default(false)
  contactName     String?
  email           String?
  phone           String?
  address         String?
  city            String?
  state           String?
  zipCode         String?
  website         String?
  logoUrl         String?
  logoMediaId     String?
  dataAiHintLogo  String?
  description     String?
  memberSince     DateTime?
  rating          Float?
  activeLotsCount Int?
  totalSalesValue Float?
  auctionsFacilitatedCount Int?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  judicialBranchId String?
  
  leiloes         Leilao[]
  lotes           Lote[]
  bens            Bem[]
  vendasDiretas   VendaDireta[]
  processosJudiciais ProcessoJudicial[]
  usuario         Usuario?    @relation(fields: [id], references: [id]) // Assuming a 1-to-1 link for user-as-seller
  varaJudicial    Vara?       @relation(fields: [judicialBranchId], references: [id])

  @@index([judicialBranchId])
}

model Leiloeiro {
  id              String      @id @default(uuid())
  publicId        String      @unique
  name            String      @unique
  slug            String      @unique
  registrationNumber String?
  contactName     String?
  email           String?
  phone           String?
  address         String?
  city            String?
  state           String?
  zipCode         String?
  website         String?
  logoUrl         String?
  logoMediaId     String?
  dataAiHintLogo  String?
  description     String?
  memberSince     DateTime?
  rating          Float?
  auctionsConductedCount Int?
  totalValueSold  Float?
  userId          String?     @unique
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  leiloes         Leilao[]
  lotes           Lote[]
  usuario         Usuario?    @relation(fields: [userId], references: [id])
}

model VendaDireta {
  id                  String      @id @default(uuid())
  publicId            String      @unique
  title               String
  description         String
  offerType           String
  status              String
  price               Float?
  minimumOfferPrice   Float?
  locationCity        String?
  locationState       String?
  imageUrl            String?
  imageMediaId        String?
  dataAiHint          String?
  expiresAt           DateTime?
  views               Int         @default(0)
  proposalsCount      Int         @default(0)
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  
  categoriaId         String
  vendedorId          String

  categoria           CategoriaLote   @relation(fields: [categoriaId], references: [id])
  vendedor            Vendedor        @relation(fields: [vendedorId], references: [id])
  usuario             Usuario?        @relation(fields: [vendedorId], references: [id])
  imagemPrincipal     MediaItem?      @relation("VendaDiretaImagemPrincipal", fields: [imageMediaId], references: [id], onDelete: SetNull)
  
  @@index([categoriaId])
  @@index([vendedorId])
  @@index([imageMediaId])
}

model MediaItem {
  id          String      @id @default(uuid())
  fileName    String
  storagePath String      @unique
  title       String?
  altText     String?
  caption     String?
  description String?
  mimeType    String
  sizeBytes   Int
  width       Int?
  height      Int?
  urlOriginal String
  urlThumbnail String?
  urlMedium   String?
  urlLarge    String?
  uploadedAt  DateTime    @default(now())
  uploadedBy  String?
  dataAiHint  String?
  
  lotesImagemPrincipal    Lote[] @relation("LoteImagemPrincipal")
  leiloesImagemCapa       Leilao[] @relation("LeilaoImagemCapa")
  ofertasVendaDireta      VendaDireta[] @relation("VendaDiretaImagemPrincipal")
}

model PostBlog {
  id              String      @id @default(uuid())
  publicId        String      @unique
  title           String
  slug            String      @unique
  content         String
  excerpt         String?
  imageUrl        String?
  status          String      // e.g., 'DRAFT', 'PUBLISHED', 'ARCHIVED'
  publishedAt     DateTime?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  authorId        String
  categoryId      String?

  autor           Usuario         @relation(fields: [authorId], references: [id])
  categoria       CategoriaLote?  @relation(fields: [categoryId], references: [id])
  
  @@index([authorId])
  @@index([categoryId])
}

model ContactMessage {
  id          String      @id @default(uuid())
  name        String
  email       String
  subject     String
  message     String
  isRead      Boolean     @default(false)
  createdAt   DateTime    @default(now())
}

model Review {
  id              String   @id @default(uuid())
  rating          Int
  comment         String?
  createdAt       DateTime @default(now())
  
  lotId           String
  auctionId       String
  userId          String

  lote            Lote     @relation(fields: [lotId], references: [id], onDelete: Cascade)
  usuario         Usuario  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([lotId])
  @@index([userId])
}

model LotQuestion {
  id                  String   @id @default(uuid())
  questionText        String
  answerText          String?
  isPublic            Boolean  @default(true)
  createdAt           DateTime @default(now())
  answeredAt          DateTime?

  lotId               String
  auctionId           String
  userId              String
  answeredByUserId    String?

  lote                Lote     @relation(fields: [lotId], references: [id], onDelete: Cascade)
  usuario             Usuario  @relation(fields: [userId], references: [id], onDelete: Cascade)
  respondente         Usuario? @relation("RespostasUsuario", fields: [answeredByUserId], references: [id], onDelete: SetNull)

  @@index([lotId])
  @@index([userId])
  @@index([answeredByUserId])
}

model ConfiguracoesPlataforma {
  id                  String  @id @default("global")
  siteTitle           String?
  siteTagline         String?
  galleryImageBasePath String?
  storageProvider     String?
  firebaseStorageBucket String?
  activeThemeName     String?
  temas               String? // JSON string
  platformPublicIdMasks Json?
  homepageSections    Json?
  mentalTriggerSettings Json?
  sectionBadgeVisibility Json?
  mapSettings         Json?
  biddingSettings     Json?
  variableIncrementTable Json?
  searchPaginationType String?
  searchItemsPerPage  Int?
  searchLoadMoreCount Int?
  defaultListItemsPerPage Int?
  showCountdownOnLotDetail Boolean?
  showCountdownOnCards Boolean?
  showRelatedLotsOnLotDetail Boolean?
  relatedLotsCount    Int?
  updatedAt           DateTime @updatedAt
}


model Estado {
  id        String      @id @default(uuid())
  name      String      @unique
  uf        String      @unique
  slug      String      @unique
  
  cidades   Cidade[]
  lotes     Lote[]
  tribunais Tribunal[]
  comarcas  Comarca[]
}

model Cidade {
  id        String      @id @default(uuid())
  name      String
  slug      String
  ibgeCode  String?
  
  stateId   String
  estado    Estado      @relation(fields: [stateId], references: [id])
  
  lotes     Lote[]

  @@unique([name, stateId])
}

model Notificacao {
  id          String      @id @default(uuid())
  message     String
  link        String?
  isRead      Boolean     @default(false)
  createdAt   DateTime    @default(now())

  userId      String
  usuario     Usuario     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
}

enum Sexo {
  MACHO
  FEMEA
}
