// prisma/schema.prisma

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// =================================================================
// 1. Tabelas sem dependências de chave estrangeira (Tabelas Base)
// =================================================================

model PlatformSettings {
  id                                String                      @id @default(cuid())
  siteTitle                         String?
  siteTagline                       String?
  logoUrl                           String?
  faviconUrl                        String?
  galleryImageBasePath              String?
  storageProvider                   String?
  firebaseStorageBucket             String?
  activeThemeName                   String?
  themes                            Json?
  platformPublicIdMasks             Json?
  homepageSections                  Json?
  mentalTriggerSettings             Json?
  sectionBadgeVisibility            Json?
  mapSettings                       Json?
  searchPaginationType              String?
  searchItemsPerPage                Int?
  searchLoadMoreCount               Int?
  showCountdownOnLotDetail          Boolean?
  showCountdownOnCards              Boolean?
  showCountdownOnLotDetailHabilitado Boolean?
  showRelatedLotsOnLotDetail        Boolean?
  relatedLotsCount                  Int?
  defaultUrgencyTimerHours          Int?
  variableIncrementTable            Json?
  biddingSettings                   Json?
  defaultListItemsPerPage           Int?
  updatedAt                         DateTime?                   @updatedAt
}

model Role {
  id            String         @id @default(cuid())
  name          String         @unique
  nameNormalized String        @unique
  description   String?
  permissions   String[]
  users         UsersOnRoles[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model UsersOnRoles {
    user User @relation(fields: [userId], references: [id])
    userId String
    role Role @relation(fields: [roleId], references: [id])
    roleId String
    assignedAt DateTime @default(now())
    assignedBy String

    @@id([userId, roleId])
}

model State {
  id        String             @id @default(cuid())
  name      String
  uf        String             @unique
  slug      String             @unique
  cities    City[]
  districts JudicialDistrict[]
  lots      Lot[]
}

model LotCategory {
  id                 String          @id @default(cuid())
  name               String          @unique
  slug               String          @unique
  description        String?
  hasSubcategories   Boolean         @default(false)
  itemCount          Int?
  iconName           String?
  logoUrl            String?
  logoMediaId        String?
  dataAiHintIcon     String?
  coverImageUrl      String?
  coverImageMediaId  String?
  dataAiHintCover    String?
  megaMenuImageUrl   String?
  megaMenuImageMediaId String?
  dataAiHintMegaMenu String?
  auctions           Auction[]
  bens               Bem[]
  lots               Lot[]
  subcategories      Subcategory[]
}

model Subcategory {
  id                String      @id @default(cuid())
  name              String
  slug              String      @unique
  parentCategory    LotCategory @relation(fields: [parentCategoryId], references: [id])
  parentCategoryId  String
  description       String?
  displayOrder      Int         @default(0)
  iconUrl           String?
  iconMediaId       String?
  dataAiHintIcon    String?
  bens              Bem[]
  lots              Lot[]
}

model DocumentTemplate {
  id      String   @id @default(cuid())
  name    String
  type    String
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContactMessage {
  id       String   @id @default(cuid())
  name     String
  email    String
  subject  String
  message  String
  isRead   Boolean  @default(false)
  createdAt DateTime @default(now())
}

model DocumentType {
  id           String         @id @default(cuid())
  name         String         @unique
  description  String
  isRequired   Boolean
  appliesTo    String
  userDocs     UserDocument[]
}

// =================================================================
// 2. Tabelas com um nível de dependência
// =================================================================

model User {
  id                  String             @id @default(cuid())
  email               String             @unique
  password            String?
  fullName            String?
  roles               UsersOnRoles[]
  seller              Seller?
  auctioneer          Auctioneer?
  habilitationStatus  String             @default("PENDING_DOCUMENTS")
  accountType         String             @default("PHYSICAL")
  avatarUrl           String?
  dataAiHint          String?
  badges              String[]
  bids                Bid[]
  wins                UserWin[]
  maxBids             UserLotMaxBid[]
  uploadedMedia       MediaItem[]
  documents           UserDocument[]
  habilitations       AuctionHabilitation[]
  notifications       Notification[]
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
}

model City {
  id       String @id @default(cuid())
  name     String
  slug     String @unique
  state    State  @relation(fields: [stateId], references: [id])
  stateId  String
  stateUf  String
  ibgeCode String @unique
  lots     Lot[]
}

model Court {
  id                String             @id @default(cuid())
  name              String             @unique
  slug              String             @unique
  stateUf           String
  website           String?
  districts         JudicialDistrict[]
  judicialProcesses JudicialProcess[]
  auctions          Auction[]
}

// =================================================================
// 3. Tabelas com dois ou mais níveis de dependência
// =================================================================

model JudicialDistrict {
  id                String             @id @default(cuid())
  name              String
  slug              String             @unique
  court             Court              @relation(fields: [courtId], references: [id])
  courtId           String
  state             State              @relation(fields: [stateId], references: [id])
  stateId           String
  zipCode           String?
  branches          JudicialBranch[]
  judicialProcesses JudicialProcess[]
}

model JudicialBranch {
  id                String             @id @default(cuid())
  name              String
  slug              String             @unique
  district          JudicialDistrict   @relation(fields: [districtId], references: [id])
  districtId        String
  contactName       String?
  phone             String?
  email             String?
  sellers           Seller[]
  judicialProcesses JudicialProcess[]
  auctions          Auction[]
}

model Seller {
  id               String             @id @default(cuid())
  publicId         String             @unique
  slug             String             @unique
  name             String             @unique
  contactName      String?
  email            String?
  phone            String?
  address          String?
  city             String?
  state            String?
  zipCode          String?
  website          String?
  logoUrl          String?
  logoMediaId      String?
  dataAiHintLogo   String?
  description      String?
  userId           String?            @unique
  user             User?              @relation(fields: [userId], references: [id], onDelete: SetNull)
  isJudicial       Boolean            @default(false)
  judicialBranchId String?
  judicialBranch   JudicialBranch?    @relation(fields: [judicialBranchId], references: [id])
  auctions         Auction[]
  lots             Lot[]
  bens             Bem[]
  directSaleOffers DirectSaleOffer[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
}

model Auctioneer {
  id                   String    @id @default(cuid())
  publicId             String    @unique
  slug                 String    @unique
  name                 String    @unique
  registrationNumber   String?
  contactName          String?
  email                String?
  phone                String?
  address              String?
  city                 String?
  state                String?
  zipCode              String?
  website              String?
  logoUrl              String?
  logoMediaId          String?
  dataAiHintLogo       String?
  description          String?
  userId               String?   @unique
  user                 User?     @relation(fields: [userId], references: [id])
  auctions             Auction[]
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model JudicialProcess {
  id            String             @id @default(cuid())
  publicId      String             @unique
  processNumber String             @unique
  isElectronic  Boolean            @default(true)
  courtId       String
  court         Court              @relation(fields: [courtId], references: [id])
  districtId    String
  district      JudicialDistrict   @relation(fields: [districtId], references: [id])
  branchId      String
  branch        JudicialBranch     @relation(fields: [branchId], references: [id])
  sellerId      String?
  seller        Seller?            @relation(fields: [sellerId], references: [id], onDelete: SetNull)
  parties       JudicialParty[]
  bens          Bem[]
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
}

model JudicialParty {
  id             String          @id @default(cuid())
  process        JudicialProcess @relation(fields: [processId], references: [id])
  processId      String
  name           String
  documentNumber String?
  partyType      String
}

model Bem {
  id                       String          @id @default(cuid())
  publicId                 String          @unique
  title                    String
  description              String?
  status                   String          @default("DISPONIVEL")
  categoryId               String
  category                 LotCategory     @relation(fields: [categoryId], references: [id])
  subcategoryId            String?
  subcategory              Subcategory?    @relation(fields: [subcategoryId], references: [id])
  judicialProcessId        String?
  judicialProcess          JudicialProcess?@relation(fields: [judicialProcessId], references: [id])
  sellerId                 String?
  seller                   Seller?         @relation(fields: [sellerId], references: [id])
  evaluationValue          Float?
  imageUrl                 String?
  imageMediaId             String?
  galleryImageUrls         String[]
  mediaItemIds             String[]
  dataAiHint               String?
  locationCity             String?
  locationState            String?
  address                  String?
  latitude                 Float?
  longitude                Float?
  createdAt                DateTime        @default(now())
  updatedAt                DateTime        @updatedAt
  lots                     LotBens[]

  // Vehicle-specific fields
  plate                    String?
  make                     String?
  model                    String?
  version                  String?
  year                     Int?
  modelYear                Int?
  mileage                  Int?
  color                    String?
  fuelType                 String?
  transmissionType         String?
  bodyType                 String?
  vin                      String?         @unique
  renavam                  String?         @unique
  enginePower              String?
  numberOfDoors            Int?
  vehicleOptions           String?
  detranStatus             String?
  debts                    String?
  runningCondition         String?
  bodyCondition            String?
  tiresCondition           String?
  hasKey                   Boolean?
  
  // Real estate specific fields
  propertyRegistrationNumber String?
  iptuNumber               String?
  isOccupied               Boolean?
  totalArea                Float?
  builtArea                Float?
  bedrooms                 Int?
  suites                   Int?
  bathrooms                Int?
  parkingSpaces            Int?
  constructionType         String?
  finishes                 String?
  infrastructure           String?
  condoDetails             String?
  improvements             String?
  topography               String?
  liensAndEncumbrances     String?
  propertyDebts            String?
  unregisteredRecords      String?
  hasHabiteSe              Boolean?
  zoningRestrictions       String?
}

model Auction {
  id                              String               @id @default(cuid())
  publicId                        String               @unique
  slug                            String               @unique
  title                           String
  description                     String?
  status                          String               @default("RASCUNHO")
  auctionDate                     DateTime
  endDate                         DateTime?
  auctioneerId                    String
  auctioneer                      Auctioneer           @relation(fields: [auctioneerId], references: [id])
  sellerId                        String
  seller                          Seller               @relation(fields: [sellerId], references: [id])
  categoryId                      String
  category                        LotCategory          @relation(fields: [categoryId], references: [id])
  auctionType                     String
  imageUrl                        String?
  imageMediaId                    String?
  documentsUrl                    String?
  visits                          Int                  @default(0)
  initialOffer                    Float?
  isFavorite                      Boolean              @default(false)
  dataAiHint                      String?
  lots                            Lot[]
  bids                            Bid[]
  habilitations                   AuctionHabilitation[]
  createdAt                       DateTime             @default(now())
  updatedAt                       DateTime             @updatedAt

  // Novos campos do leilão
  evaluationReportUrl             String?
  auctionCertificateUrl           String?
  sellingBranch                   String?
  automaticBiddingEnabled         Boolean              @default(false)
  allowInstallmentBids            Boolean              @default(false)
  silentBiddingEnabled            Boolean              @default(false)
  allowMultipleBidsPerUser        Boolean              @default(true)
  softCloseEnabled                Boolean              @default(false)
  softCloseMinutes                Int?                 @default(2)
  estimatedRevenue                Float?
  achievedRevenue                 Float?
  totalHabilitatedUsers           Int?
  isFeaturedOnMarketplace         Boolean              @default(false)
  marketplaceAnnouncementTitle    String?
  judicialProcessId               String?
  judicialProcess                 JudicialProcess?     @relation(fields: [judicialProcessId], references: [id])
  additionalTriggers              String[]
  decrementAmount                 Float?
  decrementIntervalSeconds        Int?
  floorPrice                      Float?
  autoRelistSettings              Json?

  // Campos para entidade judicial associada
  courtId                         String?
  court                           Court?               @relation(fields: [courtId], references: [id])
  districtId                      String?
  district                        JudicialDistrict?    @relation(fields: [districtId], references: [id])
  branchId                        String?
  branch                          JudicialBranch?      @relation(fields: [branchId], references: [id])
}

model Lot {
  id                       String          @id @default(cuid())
  publicId                 String          @unique
  auction                  Auction         @relation(fields: [auctionId], references: [id])
  auctionId                String
  slug                     String          @unique
  number                   String?
  title                    String
  description              String?
  price                    Float
  initialPrice             Float?
  secondInitialPrice       Float?
  bidIncrementStep         Float?
  status                   String          @default("EM_BREVE")
  bidsCount                Int             @default(0)
  views                    Int             @default(0)
  isFeatured               Boolean         @default(false)
  isExclusive              Boolean         @default(false)
  discountPercentage       Int?
  additionalTriggers       String[]
  imageUrl                 String?
  imageMediaId             String?
  galleryImageUrls         String[]
  mediaItemIds             String[]
  type                     String
  categoryId               String
  category                 LotCategory     @relation(fields: [categoryId], references: [id])
  subcategoryId            String?
  subcategory              Subcategory?    @relation(fields: [subcategoryId], references: [id])
  sellerId                 String?
  seller                   Seller?         @relation(fields: [sellerId], references: [id])
  cityId                   String?
  city                     City?           @relation(fields: [cityId], references: [id])
  stateId                  String?
  state                    State?          @relation(fields: [stateId], references: [id])
  cityName                 String?
  stateUf                  String?
  latitude                 Float?
  longitude                Float?
  mapAddress               String?
  mapEmbedUrl              String?
  mapStaticImageUrl        String?
  endDate                  DateTime?
  lotSpecificAuctionDate   DateTime?
  secondAuctionDate        DateTime?
  condition                String?
  dataAiHint               String?
  winnerId                 String?
  winner                   User?           @relation("WonLots", fields: [winnerId], references: [id])
  winningBidTermUrl        String?
  allowInstallmentBids     Boolean         @default(false)
  bens                     LotBens[]
  bids                     Bid[]
  userWins                 UserWin[]
  maxBids                  UserLotMaxBid[]
  createdAt                DateTime        @default(now())
  updatedAt                DateTime        @updatedAt
}

model LotBens {
  lot   Lot  @relation(fields: [lotId], references: [id])
  lotId String
  bem   Bem  @relation(fields: [bemId], references: [id])
  bemId String

  @@id([lotId, bemId])
}

model MediaItem {
  id                String   @id @default(cuid())
  fileName          String
  storagePath       String
  title             String
  altText           String?
  caption           String?
  description       String?
  mimeType          String
  sizeBytes         Int
  urlOriginal       String
  urlThumbnail      String
  urlMedium         String?
  urlLarge          String?
  linkedLotIds      String[]
  dataAiHint        String?
  uploadedBy        User     @relation(fields: [uploadedByUserId], references: [id])
  uploadedByUserId  String
  uploadedAt        DateTime @default(now())
  judicialProcessId String?  @unique
}

model UserDocument {
  id              String       @id @default(cuid())
  user            User         @relation(fields: [userId], references: [id])
  userId          String
  documentType    DocumentType @relation(fields: [documentTypeId], references: [id])
  documentTypeId  String
  status          String       @default("PENDING_ANALYSIS")
  fileUrl         String
  fileName        String?
  rejectionReason String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  @@unique([userId, documentTypeId])
}

model Bid {
  id            String   @id @default(cuid())
  lot           Lot      @relation(fields: [lotId], references: [id])
  lotId         String
  auction       Auction  @relation(fields: [auctionId], references: [id])
  auctionId     String
  bidder        User     @relation(fields: [bidderId], references: [id])
  bidderId      String
  bidderDisplay String
  amount        Float
  timestamp     DateTime @default(now())
}

model UserWin {
  id               String   @id @default(cuid())
  lot              Lot      @relation(fields: [lotId], references: [id])
  lotId            String   @unique
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  winningBidAmount Float
  winDate          DateTime
  paymentStatus    String
  invoiceUrl       String?
}

model AuctionHabilitation {
    user      User    @relation(fields: [userId], references: [id])
    userId    String
    auction   Auction @relation(fields: [auctionId], references: [id])
    auctionId String
    habilitatedAt DateTime @default(now())

    @@id([userId, auctionId])
}

model Notification {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   String
  link      String?
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
}

model DirectSaleOffer {
  id                   String   @id @default(cuid())
  publicId             String   @unique
  title                String
  description          String?
  offerType            String
  price                Float?
  minimumOfferPrice    Float?
  status               String   @default("ACTIVE")
  categoryId           String?
  category             LotCategory? @relation(fields: [categoryId], references: [id])
  sellerId             String?
  seller               Seller?  @relation(fields: [sellerId], references: [id])
  locationCity         String?
  locationState        String?
  imageUrl             String?
  imageMediaId         String?
  dataAiHint           String?
  galleryImageUrls     String[]
  mediaItemIds         String[]
  itemsIncluded        String[]
  views                Int      @default(0)
  expiresAt            DateTime?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model UserLotMaxBid {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  lot       Lot      @relation(fields: [lotId], references: [id])
  lotId     String
  maxAmount Float
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())

  @@unique([userId, lotId])
}
