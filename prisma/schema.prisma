
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id          String   @id @default(cuid())
  name        String
  subdomain   String?  @unique
  domain      String?  @unique
  logoUrl     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       UsersOnTenants[]
  auctions    Auction[]
  lots        Lot[]
  assets      Asset[]
  sellers     Seller[]
  auctioneers Auctioneer[]
  judicialProcesses JudicialProcess[]
  notifications     Notification[]
  reports           Report[]

  @@index([subdomain])
  @@index([domain])
}

model UsersOnTenants {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  tenantId  String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, tenantId])
}

model User {
  id                  String       @id @default(cuid())
  publicId            String?      @unique
  email               String       @unique
  password            String
  fullName            String?
  avatarUrl           String?
  dataAiHint          String?
  cpf                 String?      @unique
  rgNumber            String?
  rgIssuer            String?
  rgIssueDate         DateTime?
  rgState             String?
  dateOfBirth         DateTime?
  cellPhone           String?
  homePhone           String?
  gender              String?
  profession          String?
  nationality         String?
  maritalStatus       String?
  propertyRegime      String?
  spouseName          String?
  spouseCpf           String?
  zipCode             String?
  street              String?
  number              String?
  complement          String?
  neighborhood        String?
  city                String?
  state               String?
  accountType         String       @default("PHYSICAL")
  razaoSocial         String?
  cnpj                String?      @unique
  inscricaoEstadual   String?
  website             String?
  responsibleName     String?
  responsibleCpf      String?
  habilitationStatus  String       @default("PENDING_DOCUMENTS")
  roles               UsersOnRoles[]
  tenants             UsersOnTenants[]
  documents           UserDocument[]
  bids                Bid[]
  notifications       Notification[]
  habilitations       AuctionHabilitation[]
  wins                UserWin[]
  reviews             Review[]
  maxBids             UserLotMaxBid[]
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  sellerId            String?      @unique
  seller              Seller?      @relation(fields: [sellerId], references: [id])
  auctioneerId        String?      @unique
  auctioneer          Auctioneer?  @relation(fields: [auctioneerId], references: [id])
  questions           LotQuestion[]
  badges              String[] // Ex: 'PRIMEIRO_ARREMATE'

  @@index([email])
}

model UsersOnRoles {
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  role       Role     @relation(fields: [roleId], references: [id])
  roleId     String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, roleId])
}

model Role {
  id             String    @id @default(cuid())
  name           String    @unique
  nameNormalized String    @unique
  description    String?
  permissions    String[]
  users          UsersOnRoles[]
}

model State {
  id      String   @id @default(cuid())
  name    String   @unique
  uf      String   @unique
  slug    String   @unique
  cities  City[]
  auctions Auction[]
  lots    Lot[]
  assets  Asset[]
  districts JudicialDistrict[]
}

model City {
  id      String   @id @default(cuid())
  name    String
  slug    String
  state   State    @relation(fields: [stateId], references: [id])
  stateId String
  stateUf String
  ibgeCode String? @unique
  auctions Auction[]
  lots    Lot[]
  assets  Asset[]

  @@unique([name, stateId])
}

model Court {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  stateUf     String
  website     String?
  districts   JudicialDistrict[]
  processes   JudicialProcess[]
  auctions    Auction[]
}

model JudicialDistrict {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  court       Court    @relation(fields: [courtId], references: [id])
  courtId     String
  state       State    @relation(fields: [stateId], references: [id])
  stateId     String
  zipCode     String?
  branches    JudicialBranch[]
  processes   JudicialProcess[]
  auctions    Auction[]
}

model JudicialBranch {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  district    JudicialDistrict @relation(fields: [districtId], references: [id])
  districtId  String
  contactName String?
  phone       String?
  email       String?
  processes   JudicialProcess[]
  auctions    Auction[]
  Seller      Seller?
}

model JudicialParty {
  id              String          @id @default(cuid())
  process         JudicialProcess @relation(fields: [processId], references: [id])
  processId       String
  name            String
  documentNumber  String?
  partyType       String
}

model JudicialProcess {
  id              String   @id @default(cuid())
  publicId        String?  @unique
  processNumber   String
  isElectronic    Boolean  @default(true)
  court           Court    @relation(fields: [courtId], references: [id])
  courtId         String
  district        JudicialDistrict @relation(fields: [districtId], references: [id])
  districtId      String
  branch          JudicialBranch @relation(fields: [branchId], references: [id])
  branchId        String
  seller          Seller?  @relation(fields: [sellerId], references: [id])
  sellerId        String?
  parties         JudicialParty[]
  assets          Asset[]
  auctions        Auction[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  tenant          Tenant   @relation(fields: [tenantId], references: [id])
  tenantId        String

  @@unique([processNumber, tenantId])
}

model Auction {
  id                String   @id @default(cuid())
  publicId          String?  @unique
  title             String
  description       String?  @db.Text
  slug              String   @unique
  status            String   @default("RASCUNHO")
  auctionType       String
  auctionDate       DateTime @default(now())
  endDate           DateTime?
  lots              Lot[]
  auctioneer        Auctioneer @relation(fields: [auctioneerId], references: [id])
  auctioneerId      String
  seller            Seller?  @relation(fields: [sellerId], references: [id])
  sellerId          String?
  category          LotCategory? @relation(fields: [categoryId], references: [id])
  categoryId        String?
  visits            Int?     @default(0)
  imageUrl          String?
  imageMediaId      String?
  documentsUrl      String?
  initialOffer      Decimal?
  city              City? @relation(fields: [cityId], references: [id])
  cityId            String?
  state             State? @relation(fields: [stateId], references: [id])
  stateId           String?
  street            String?
  number            String?
  complement        String?
  neighborhood      String?
  zipCode           String?
  latitude          Decimal?
  longitude         Decimal?
  mapAddress        String?
  isFeaturedOnMarketplace Boolean? @default(false)
  marketplaceAnnouncementTitle String?
  softCloseEnabled  Boolean? @default(false)
  softCloseMinutes  Int? @default(2)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt()
  judicialProcess   JudicialProcess? @relation(fields: [judicialProcessId], references: [id])
  judicialProcessId String?
  court             Court?   @relation(fields: [courtId], references: [id])
  courtId           String?
  district          JudicialDistrict? @relation(fields: [districtId], references: [id])
  districtId        String?
  branch            JudicialBranch? @relation(fields: [branchId], references: [id])
  branchId          String?
  tenant            Tenant   @relation(fields: [tenantId], references: [id])
  tenantId          String
  bids              Bid[]
  participation     String   @default("ONLINE")
  auctionMethod     String   @default("STANDARD")
  decrementAmount   Decimal?
  decrementIntervalSeconds Int?
  floorPrice        Decimal?
  estimatedRevenue  Decimal?
  achievedRevenue   Decimal?
  allowInstallmentBids Boolean @default(true)
  silentBiddingEnabled Boolean @default(false)
  allowMultipleBidsPerUser Boolean @default(true)
  autoRelistSettingsId String? @unique
  autoRelistSettings RelistSettings?
  stages            AuctionStage[]
  habilitations     AuctionHabilitation[]
  lotPrices         LotStagePrice[]
}

model AuctionHabilitation {
  userId     String
  auctionId  String
  user       User    @relation(fields: [userId], references: [id])
  auction    Auction @relation(fields: [auctionId], references: [id])
  assignedAt DateTime @default(now())

  @@id([userId, auctionId])
}

model LotStagePrice {
  id             String       @id @default(cuid())
  lot            Lot          @relation(fields: [lotId], references: [id])
  lotId          String
  auction        Auction      @relation(fields: [auctionId], references: [id])
  auctionId      String
  auctionStage   AuctionStage @relation(fields: [auctionStageId], references: [id])
  auctionStageId String
  initialBid     Decimal?
  bidIncrement   Decimal?

  @@unique([lotId, auctionStageId])
}

model AuctionStage {
  id          String   @id @default(cuid())
  auction     Auction  @relation(fields: [auctionId], references: [id])
  auctionId   String
  name        String
  startDate   DateTime
  endDate     DateTime
  initialPrice Decimal? @db.Decimal(12, 2)
  lotPrices   LotStagePrice[]

  @@index([auctionId])
}

model Notification {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   String
  link      String?
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  tenantId  String

  @@index([userId])
}

model UserLotMaxBid {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  lot       Lot      @relation(fields: [lotId], references: [id])
  lotId     String
  maxAmount Decimal  @db.Decimal(12, 2)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, lotId])
  @@index([lotId])
}

model LotCategory {
  id                  String    @id @default(cuid())
  name                String    @unique
  slug                String    @unique
  description         String?
  iconName            String?
  hasSubcategories    Boolean   @default(false)
  subcategories       Subcategory[]
  lots                Lot[]
  assets              Asset[]
  logoUrl             String?
  logoMediaId         String?
  dataAiHintIcon      String?
  coverImageUrl       String?
  coverImageMediaId   String?
  dataAiHintCover     String?
  megaMenuImageUrl    String?
  megaMenuImageMediaId String?
  dataAiHintMegaMenu  String?
  publicId            String?   @unique
}

model Subcategory {
  id                String      @id @default(cuid())
  name              String
  slug              String
  description       String?
  parentCategory    LotCategory @relation(fields: [parentCategoryId], references: [id])
  parentCategoryId  String
  displayOrder      Int?        @default(0)
  iconUrl           String?
  iconMediaId       String?
  dataAiHintIcon    String?
  lots              Lot[]
  assets            Asset[]
  publicId          String?     @unique

  @@unique([name, parentCategoryId])
}

    