// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model LotCategory {
  id               String        @id @default(cuid())
  name             String
  slug             String        @unique
  description      String?
  itemCount        Int           @default(0)
  hasSubcategories Boolean       @default(false)
  logoUrl          String?
  logoMediaId      String?
  coverImageUrl    String?
  coverImageMediaId String?
  megaMenuImageUrl String?
  megaMenuImageMediaId String?
  dataAiHintLogo   String?
  dataAiHintCover  String?
  dataAiHintMegaMenu String?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  auctions         Auction[]
  bens             Bem[]
  subcategories    Subcategory[]
  lots             Lot[]
}

model Subcategory {
  id                String      @id @default(cuid())
  name              String
  slug              String
  parentCategory    LotCategory @relation(fields: [parentCategoryId], references: [id])
  parentCategoryId  String
  description       String?
  itemCount         Int         @default(0)
  displayOrder      Int         @default(0)
  iconUrl           String?
  iconMediaId       String?
  dataAiHintIcon    String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  bens              Bem[]
  lots              Lot[]

  @@unique([parentCategoryId, slug])
}

model State {
  id        String   @id @default(cuid())
  name      String
  uf        String   @unique
  slug      String   @unique
  cityCount Int      @default(0)
  cities    City[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  districts JudicialDistrict[]
}

model City {
  id        String   @id @default(cuid())
  name      String
  slug      String
  state     State    @relation(fields: [stateId], references: [id])
  stateId   String
  stateUf   String
  ibgeCode  String?
  lotCount  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MediaItem {
  id                String   @id @default(cuid())
  fileName          String
  uploadedAt        DateTime @default(now())
  uploadedBy        String?
  storagePath       String?
  title             String?
  altText           String?
  caption           String?
  description       String?
  mimeType          String
  sizeBytes         Int
  dimensionsWidth   Int?
  dimensionsHeight  Int?
  urlOriginal       String
  urlThumbnail      String?
  urlMedium         String?
  urlLarge          String?
  linkedLotIds      String[]
  dataAiHint        String?
  Auction           Auction[]
  Seller            Seller[]
  Auctioneer        Auctioneer[]
  Bem               Bem[]
}

model Role {
  id              String   @id @default(cuid())
  name            String
  name_normalized String   @unique
  description     String?
  permissions     String[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  users           User[]
}

model User {
  id                    String    @id @default(cuid())
  email                 String    @unique
  fullName              String?
  password              String?
  roleId                String?
  role                  Role?     @relation(fields: [roleId], references: [id])
  status                String?
  habilitationStatus    String?
  cpf                   String?
  rgNumber              String?
  rgIssuer              String?
  rgIssueDate           DateTime?
  rgState               String?
  dateOfBirth           DateTime?
  cellPhone             String?
  homePhone             String?
  gender                String?
  profession            String?
  nationality           String?
  maritalStatus         String?
  propertyRegime        String?
  spouseName            String?
  spouseCpf             String?
  zipCode               String?
  street                String?
  number                String?
  complement            String?
  neighborhood          String?
  city                  String?
  state                 String?
  optInMarketing        Boolean   @default(false)
  avatarUrl             String?
  dataAiHint            String?
  accountType           String?
  razaoSocial           String?
  cnpj                  String?   @unique
  inscricaoEstadual     String?
  websiteComitente      String?
  documentUrls          Json?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  bids                  Bid[]
  wins                  UserWin[]
  documents             UserDocument[]
  maxBids               UserLotMaxBid[]
  questions             LotQuestion[]
  answers               LotQuestion[] @relation("AnsweredBy")
  reviews               Review[]
}

model UserWin {
  id                String        @id @default(cuid())
  user              User          @relation(fields: [userId], references: [id])
  userId            String
  lot               Lot           @relation(fields: [lotId], references: [id])
  lotId             String
  winningBidAmount  Decimal
  winDate           DateTime
  paymentStatus     String        @default("PENDENTE")
  invoiceUrl        String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
}

model UserLotMaxBid {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  lot         Lot      @relation(fields: [lotId], references: [id])
  lotId       String
  maxAmount   Decimal
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@unique([userId, lotId])
}

model DocumentType {
  id               String         @id @default(cuid())
  name             String
  description      String?
  isRequired       Boolean
  allowedFormats   String[]
  displayOrder     Int            @default(0)
  appliesTo        String[]
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  userDocuments    UserDocument[]
}

model UserDocument {
  id              String        @id @default(cuid())
  user            User          @relation(fields: [userId], references: [id])
  userId          String
  documentType    DocumentType  @relation(fields: [documentTypeId], references: [id])
  documentTypeId  String
  fileUrl         String?
  fileName        String?
  status          String        @default("NOT_SENT") // e.g., 'NOT_SENT', 'SUBMITTED', 'APPROVED', 'REJECTED', 'PENDING_ANALYSIS'
  uploadDate      DateTime?
  analysisDate    DateTime?
  analystId       String?
  rejectionReason String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  @@unique([userId, documentTypeId])
}

model Court {
  id        String             @id @default(cuid())
  name      String
  slug      String             @unique
  website   String?
  stateUf   String
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  districts JudicialDistrict[]
  processes JudicialProcess[]
}

model JudicialDistrict {
  id         String            @id @default(cuid())
  name       String
  slug       String
  court      Court             @relation(fields: [courtId], references: [id])
  courtId    String
  state      State             @relation(fields: [stateId], references: [id])
  stateId    String
  zipCode    String?
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  branches   JudicialBranch[]
  processes  JudicialProcess[]
  
  @@unique([slug, stateId])
}

model JudicialBranch {
  id            String             @id @default(cuid())
  name          String
  slug          String
  district      JudicialDistrict   @relation(fields: [districtId], references: [id])
  districtId    String
  contactName   String?
  phone         String?
  email         String?
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  sellers       Seller[]
  processes     JudicialProcess[]
  
  @@unique([slug, districtId])
}

model ProcessParty {
  id              String          @id @default(cuid())
  process         JudicialProcess @relation(fields: [processId], references: [id])
  processId       String
  name            String
  documentNumber  String?
  partyType       String // e.g., AUTOR, REU, ADVOGADO, etc.
  createdAt       DateTime        @default(now())
}

model JudicialProcess {
  id                String       @id @default(cuid())
  publicId          String?      @unique
  processNumber     String       @unique
  oldProcessNumber  String?
  isElectronic      Boolean
  court             Court        @relation(fields: [courtId], references: [id])
  courtId           String
  district          JudicialDistrict @relation(fields: [districtId], references: [id])
  districtId        String
  branch            JudicialBranch @relation(fields: [branchId], references: [id])
  branchId          String
  seller            Seller?      @relation(fields: [sellerId], references: [id])
  sellerId          String?
  parties           ProcessParty[]
  bens              Bem[]
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model Bem {
  id                      String          @id @default(cuid())
  publicId                String?         @unique
  title                   String
  description             String?
  judicialProcess         JudicialProcess? @relation(fields: [judicialProcessId], references: [id])
  judicialProcessId       String?
  seller                  Seller?         @relation(fields: [sellerId], references: [id])
  sellerId                String?
  status                  String          @default("DISPONIVEL") // e.g., DISPONIVEL, LOTEADO, VENDIDO, REMOVIDO
  category                LotCategory?    @relation(fields: [categoryId], references: [id])
  categoryId              String?
  subcategory             Subcategory?    @relation(fields: [subcategoryId], references: [id])
  subcategoryId           String?
  imageUrl                String?
  imageMedia              MediaItem?      @relation(fields: [imageMediaId], references: [id])
  imageMediaId            String?
  dataAiHint              String?
  galleryImageUrls        Json?
  mediaItemIds            String[]
  evaluationValue         Decimal?
  locationCity            String?
  locationState           String?
  address                 String?
  latitude                Float?
  longitude               Float?
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
  lot                     Lot?

  // Vehicle Specific
  plate                 String?
  make                  String?
  model                 String?
  version               String?
  year                  Int?
  modelYear             Int?
  mileage               Int?
  color                 String?
  fuelType              String?
  transmissionType      String?
  bodyType              String?
  vin                   String?
  renavam               String?
  enginePower           String?
  numberOfDoors         Int?
  vehicleOptions        String?
  detranStatus          String?
  debts                 String?
  runningCondition      String?
  bodyCondition         String?
  tiresCondition        String?
  hasKey                Boolean?

  // Real Estate Specific
  propertyRegistrationNumber String?
  iptuNumber            String?
  isOccupied            Boolean?
  area                  Decimal?
  bedrooms              Int?
  bathrooms             Int?
  parkingSpaces         Int?
  amenities             String[]
  propertyType          String?
}

model Seller {
  id                      String                @id @default(cuid())
  publicId                String?               @unique
  name                    String
  slug                    String                @unique
  contactName             String?
  email                   String?
  phone                   String?
  address                 String?
  city                    String?
  state                   String?
  zipCode                 String?
  website                 String?
  logoUrl                 String?
  logoMediaId             String?
  dataAiHintLogo          String?
  description             String?
  memberSince             DateTime?
  rating                  Decimal?
  activeLotsCount         Int?
  totalSalesValue         Decimal?
  auctionsFacilitatedCount Int?
  userId                  String?               @unique
  judicialBranchId        String?
  judicialBranch          JudicialBranch?       @relation(fields: [judicialBranchId], references: [id])
  isJudicial              Boolean?              @default(false)
  createdAt               DateTime              @default(now())
  updatedAt               DateTime              @updatedAt
  logoMedia               MediaItem?            @relation(fields: [logoMediaId], references: [id])
  auctions                Auction[]
  bens                    Bem[]
  judicialProcesses       JudicialProcess[]
  directSaleOffers        DirectSaleOffer[]
}

model Auctioneer {
  id                      String     @id @default(cuid())
  publicId                String?    @unique
  name                    String
  slug                    String     @unique
  registrationNumber      String?
  contactName             String?
  email                   String?
  phone                   String?
  address                 String?
  city                    String?
  state                   String?
  zipCode                 String?
  website                 String?
  logoUrl                 String?
  logoMediaId             String?
  dataAiHintLogo          String?
  description             String?
  memberSince             DateTime?
  rating                  Decimal?
  auctionsConductedCount  Int?
  totalValueSold          Decimal?
  userId                  String?    @unique
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
  logoMedia               MediaItem? @relation(fields: [logoMediaId], references: [id])
  auctions                Auction[]
}

model Auction {
  id                            String       @id @default(cuid())
  publicId                      String?      @unique
  title                         String
  description                   String?
  status                        String
  auctionType                   String?
  category                      LotCategory? @relation(fields: [categoryId], references: [id])
  categoryId                    String?
  auctioneer                    Auctioneer?  @relation(fields: [auctioneerId], references: [id])
  auctioneerId                  String?
  seller                        Seller?      @relation(fields: [sellerId], references: [id])
  sellerId                      String?
  judicialProcessId             String?
  auctionDate                   DateTime
  endDate                       DateTime?
  city                          String?
  state                         String?
  imageUrl                      String?
  imageMediaId                  String?
  dataAiHint                    String?
  documentsUrl                  String?
  visits                        Int?
  initialOffer                  Decimal?
  softCloseEnabled              Boolean?     @default(false)
  softCloseMinutes              Int?
  automaticBiddingEnabled       Boolean?     @default(false)
  silentBiddingEnabled          Boolean?     @default(false)
  allowMultipleBidsPerUser      Boolean?     @default(true)
  allowInstallmentBids          Boolean?     @default(false)
  estimatedRevenue              Decimal?
  achievedRevenue               Decimal?
  totalHabilitatedUsers         Int?
  totalLots                     Int?
  isFeaturedOnMarketplace       Boolean?     @default(false)
  marketplaceAnnouncementTitle  String?
  auctionStages                 Json?
  autoRelistSettings            Json?
  decrementAmount               Decimal?
  decrementIntervalSeconds      Int?
  floorPrice                    Decimal?
  originalAuctionId             String?
  relistCount                   Int?         @default(0)
  createdAt                     DateTime     @default(now())
  updatedAt                     DateTime     @updatedAt
  lots                          Lot[]
  bids                          Bid[]
  reviews                       Review[]
  questions                     LotQuestion[]
  imageMedia                    MediaItem?   @relation(fields: [imageMediaId], references: [id])
  relistedFrom                  Auction?     @relation("AuctionRelist", fields: [originalAuctionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  relistedTo                    Auction[]    @relation("AuctionRelist")
}

model Lot {
  id                        String         @id @default(cuid())
  publicId                  String?        @unique
  auction                   Auction        @relation(fields: [auctionId], references: [id])
  auctionId                 String
  bem                       Bem?           @relation(fields: [bemId], references: [id])
  bemId                     String?        @unique
  bemIds                    String[]
  number                    String?
  title                     String
  description               String?
  status                    String
  price                     Decimal
  initialPrice              Decimal?
  bidIncrementStep          Decimal?
  bidsCount                 Int?
  isFeatured                Boolean?       @default(false)
  reservePrice              Decimal?
  categoryId                String?
  category                  LotCategory?   @relation(fields: [categoryId], references: [id])
  subcategoryId             String?
  subcategory               Subcategory?   @relation(fields: [subcategoryId], references: [id])
  createdAt                 DateTime       @default(now())
  updatedAt                 DateTime       @updatedAt
  bids                      Bid[]
  reviews                   Review[]
  questions                 LotQuestion[]
  maxBids                   UserLotMaxBid[]
  wins                      UserWin[]
}

model Bid {
  id              String   @id @default(cuid())
  lot             Lot      @relation(fields: [lotId], references: [id])
  lotId           String
  auction         Auction  @relation(fields: [auctionId], references: [id])
  auctionId       String
  bidder          User     @relation(fields: [bidderId], references: [id])
  bidderId        String
  bidderDisplay   String
  amount          Decimal
  timestamp       DateTime @default(now())
}

model Review {
  id              String   @id @default(cuid())
  lot             Lot      @relation(fields: [lotId], references: [id])
  lotId           String
  auction         Auction  @relation(fields: [auctionId], references: [id])
  auctionId       String
  user            User     @relation(fields: [userId], references: [id])
  userId          String
  userDisplayName String
  rating          Int
  comment         String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model LotQuestion {
  id                      String    @id @default(cuid())
  lot                     Lot       @relation(fields: [lotId], references: [id])
  lotId                   String
  auction                 Auction   @relation(fields: [auctionId], references: [id])
  auctionId               String
  user                    User      @relation("Questioner", fields: [userId], references: [id])
  userId                  String
  userDisplayName         String
  questionText            String
  createdAt               DateTime  @default(now())
  answerText              String?
  answeredAt              DateTime?
  answeredBy              User?     @relation("AnsweredBy", fields: [answeredByUserId], references: [id])
  answeredByUserId        String?
  answeredByUserDisplayName String?
  isPublic                Boolean   @default(true)
}

model DirectSaleOffer {
  id                String       @id @default(cuid())
  publicId          String?      @unique
  title             String
  description       String
  imageUrl          String
  imageMediaId      String?
  dataAiHint        String?
  galleryImageUrls  String[]
  mediaItemIds      String[]
  offerType         String // BUY_NOW or ACCEPTS_PROPOSALS
  price             Decimal?
  minimumOfferPrice Decimal?
  category          LotCategory  @relation(fields: [categoryId], references: [id])
  categoryId        String
  locationCity      String?
  locationState     String?
  seller            Seller       @relation(fields: [sellerId], references: [id])
  sellerId          String
  status            String
  itemsIncluded     String[]
  tags              String[]
  views             Int          @default(0)
  proposalsCount    Int          @default(0)
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  expiresAt         DateTime?
}

model Notification {
  id          String   @id @default(cuid())
  userId      String
  message     String
  link        String?
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
}

model BlogPost {
  id           String    @id @default(cuid())
  slug         String    @unique
  title        String
  content      String
  authorName   String
  authorId     String?
  category     String
  tags         String[]
  imageUrl     String?
  imageMediaId String?
  dataAiHint   String?
  isPublished  Boolean   @default(false)
  publishedAt  DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
