// prisma/models/asset.prisma
model Asset {
  id                      String   @id @default(cuid())
  publicId                String   @unique @default(uuid()) @map("public_id")
  title                   String
  description             String?  @db.Text
  status                  String
  evaluationValue         Decimal? @db.Decimal(12, 2)
  properties              Json?

  imageUrl                String?
  imageMediaId            String?    @map("image_media_id")
  mediaItem               MediaItem? @relation("AssetImage", fields: [imageMediaId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  // Relação para a galeria de mídia
  gallery                 AssetMedia[] @relation("AssetGallery")

  dataAiHint              String?
  locationCity            String?
  locationState           String?
  address                 String?  @db.Text

  createdAt               DateTime @default(now()) @map("created_at")
  updatedAt               DateTime @updatedAt @map("updated_at")

  street                  String?
  number                  String?
  complement              String?
  neighborhood            String?
  zipCode                 String?
  latitude                Decimal? @db.Decimal(10, 8)
  longitude               Decimal? @db.Decimal(11, 8)

  categoryId              String?
  category                LotCategory?   @relation(fields: [categoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  subcategoryId           String?
  subcategory             Subcategory?   @relation(fields: [subcategoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  
  judicialProcessId       String?
  judicialProcess         JudicialProcess? @relation(fields: [judicialProcessId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  sellerId                String?
  seller                  Seller?        @relation(fields: [sellerId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  lots                    AssetsOnLots[]

  tenantId                String
  tenant                  Tenant         @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  
  @@map("assets")
}
