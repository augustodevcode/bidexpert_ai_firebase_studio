// src/prisma/models/asset.prisma
/**
 * @fileoverview Modelo de Ativo (Bem). Representa um item individual
 * que pode ser leiloado, como um carro, uma casa, ou um equipamento.
 * Um ou mais ativos podem ser agrupados em um Lote.
 */
model Asset {
  id                String   @id @default(cuid())
  publicId          String   @unique @map("public_id")
  title             String
  description       String?  @db.Text
  status            String   @default("DISPONIVEL")
  evaluationValue   Decimal? @db.Decimal(12, 2) @map("evaluation_value")

  // Imagem Principal
  imageUrl          String?  @map("image_url")
  imageMediaId      String?  @map("image_media_id")
  mediaItem         MediaItem? @relation("AssetImage", fields: [imageMediaId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  // Galeria de Imagens (Relação Many-to-Many)
  gallery           AssetMedia[] @relation("AssetGallery")

  dataAiHint        String?  @map("data_ai_hint")

  // Relacionamentos
  category          LotCategory? @relation(fields: [categoryId], references: [id])
  categoryId        String?      @map("category_id")
  subcategory       Subcategory? @relation(fields: [subcategoryId], references: [id])
  subcategoryId     String?      @map("subcategory_id")

  judicialProcess   JudicialProcess? @relation(fields: [judicialProcessId], references: [id])
  judicialProcessId String?          @map("judicial_process_id")

  seller            Seller?       @relation(fields: [sellerId], references: [id])
  sellerId          String?       @map("seller_id")
  
  // Endereço
  street         String?
  number         String?
  complement     String?
  neighborhood   String?
  zipCode        String?       @map("zip_code")
  latitude       Decimal?      @db.Decimal(10, 8)
  longitude      Decimal?      @db.Decimal(11, 8)
  city           City?         @relation(fields: [cityId], references: [id])
  cityId         String?       @map("city_id")
  state          State?        @relation(fields: [stateId], references: [id])
  stateId        String?       @map("state_id")
  
  properties        Json?

  // Relacionamento com lotes
  lots              AssetsOnLots[]

  tenant            Tenant @relation(fields: [tenantId], references: [id])
  tenantId          String @map("tenant_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("assets")
}
