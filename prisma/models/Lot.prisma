/// Modelo para Lotes individuais dentro de um leil√£o.
model Lot {
  id                      String    @id @default(cuid())
  publicId                String?   @unique
  auctionId               String
  slug                    String?
  number                  String?
  title                   String
  description             String?   @db.Text
  price                   Decimal   @db.Decimal(15, 2)
  initialPrice            Decimal?  @db.Decimal(15, 2)
  secondInitialPrice      Decimal?  @db.Decimal(15, 2)
  bidIncrementStep        Decimal?  @db.Decimal(10, 2)
  evaluationValue         Decimal?  @db.Decimal(15, 2)
  status                  LotStatus @default(EM_BREVE)
  bidsCount               Int?      @default(0)
  views                   Int?      @default(0)
  isFeatured              Boolean?  @default(false)
  isExclusive             Boolean?  @default(false)
  discountPercentage      Int?
  additionalTriggers      Json?
  imageUrl                String?   @db.Text
  imageMediaId            String?
  galleryImageUrls        Json?
  mediaItemIds            Json?
  type                    String
  categoryId              String?
  subcategoryId           String?
  auctionName             String?
  sellerId                String?
  sellerName              String?
  auctioneerId            String?
  cityId                  String?
  stateId                 String?
  cityName                String?
  stateUf                 String?
  latitude                Decimal?
  longitude               Decimal?
  mapAddress              String?
  mapEmbedUrl             String?   @db.Text
  mapStaticImageUrl       String?   @db.Text
  endDate                 DateTime?
  auctionDate             DateTime?
  lotSpecificAuctionDate  DateTime?
  secondAuctionDate       DateTime?
  condition               String?
  dataAiHint              String?
  winnerId                String?
  winningBidTermUrl       String?
  allowInstallmentBids    Boolean?  @default(false)
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  tenantId                String

  // Relacionamentos
  tenant          Tenant              @relation(fields: [tenantId], references: [id])
  auction         Auction             @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  category        LotCategory?        @relation(fields: [categoryId], references: [id])
  subcategory     Subcategory?        @relation(fields: [subcategoryId], references: [id])
  seller          Seller?             @relation(fields: [sellerId], references: [id])
  auctioneer      Auctioneer?         @relation(fields: [auctioneerId], references: [id])
  city            City?               @relation(fields: [cityId], references: [id])
  state           State?              @relation(fields: [stateId], references: [id])
  winner          User?               @relation("LotWinner", fields: [winnerId], references: [id], onDelete: SetNull)
  assets          AssetsOnLots[]
  bids            Bid[]
  reviews         Review[]
  questions       LotQuestion[]
  maxBids         UserLotMaxBid[]
  userWins        UserWin[]
  originalLotId   String?             @unique @map("original_lot_id")
  originalLot     Lot?                @relation("Relist", fields: [originalLotId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  relistedLot     Lot?                @relation("Relist")
  isRelisted      Boolean             @default(false)
  relistCount     Int                 @default(0)
  installments    InstallmentPayment[]
  stageDetails    Json?

  @@unique([auctionId, number])
}
