// prisma/models/user.prisma

model User {
  id                  String           @id @default(cuid())
  email               String           @unique
  password            String?
  fullName            String?
  roleId              String?
  sellerId            String?
  habilitationStatus  UserHabilitationStatus @default(PENDING_DOCUMENTS)
  accountType         AccountType      @default(PHYSICAL)
  avatarUrl           String?
  dataAiHint          String?
  badges              Json?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt

  cpf                 String?
  rgNumber            String?
  rgIssuer            String?
  rgIssueDate         DateTime?
  dateOfBirth         DateTime?
  cellPhone           String?
  homePhone           String?
  gender              String?
  profession          String?
  nationality         String?
  maritalStatus       String?
  propertyRegime      String?
  spouseName          String?
  spouseCpf           String?

  zipCode             String?
  street              String?
  number              String?
  complement          String?
  neighborhood        String?
  city                String?
  state               String?

  optInMarketing      Boolean?         @default(false)
  
  roles    UsersOnRoles[]
  tenants  UsersOnTenants[]
  wins     UserWin[]
  bids     Bid[]
  uploadedMedia MediaItem[]
  documents UserDocument[]
  maxBids  UserLotMaxBid[]
}

model UsersOnRoles {
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  role       Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId     String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, roleId])
}


model Role {
  id            String   @id @default(cuid())
  name          String   @unique
  nameNormalized String  @unique
  description   String?
  permissions   String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  users         UsersOnRoles[]
}

model Tenant {
  id          String   @id @default(cuid())
  name        String
  subdomain   String   @unique
  domain      String?
  users       UsersOnTenants[]
  auctions    Auction[]
  lots        Lot[]
  bens        Bem[]
  sellers     Seller[]
  auctioneers Auctioneer[]
  judicialProcesses JudicialProcess[]
  bids         Bid[]
  notifications Notification[]
  reports      Report[]
  settings    PlatformSettings?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model UsersOnTenants {
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  tenant     Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  tenantId   String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, tenantId])
}
