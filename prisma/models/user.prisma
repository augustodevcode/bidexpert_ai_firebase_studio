model User {
  id                    BigInt                 @id @default(autoincrement())
  email                 String                 @unique
  password              String
  fullName              String?
  cpf                   String?                @unique
  rgNumber              String?
  rgIssuer              String?
  rgIssueDate           DateTime?
  rgState               String?
  dateOfBirth           DateTime?
  gender                String?
  profession            String?
  nationality           String?
  maritalStatus         String?
  propertyRegime        String?
  spouseName            String?
  spouseCpf             String?
  cellPhone             String?
  homePhone             String?
  zipCode               String?
  street                String?
  number                String?
  complement            String?
  neighborhood          String?
  city                  String?
  state                 String?
  avatarUrl             String?                @db.VarChar(1024)
  dataAiHint            String?
  lastLogin             DateTime?
  bids                  Bid[]
  wins                  UserWin[]
  lotsWon               Lot[]                   @relation("LotsWon")
  maxBids               UserLotMaxBid[]
  questions             LotQuestion[]
  reviews               Review[]
  documents             UserDocument[]
  notifications         Notification[]
  auctionHabilitations  AuctionHabilitation[]
  uploadedMedia         MediaItem[]            @relation("UploadedBy")
  roles                 UsersOnRoles[]
  tenants               UsersOnTenants[]
  sellersAsUser         Seller[]                @relation("UserSeller")
  auctioneersAsUser     Auctioneer[]
  habilitationStatus    UserHabilitationStatus @default(PENDING_DOCUMENTS)
  accountType           AccountType            @default(PHYSICAL)
  razaoSocial           String?
  cnpj                  String?                @unique
  inscricaoEstadual     String?
  website               String?
  responsibleName       String?
  responsibleCpf        String?
  badges                Json?
  optInMarketing        Boolean                @default(false)
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
}
