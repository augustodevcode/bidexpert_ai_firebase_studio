@using BidExpert_Blazor.ServiceDefaults.Dtos
@using BidExpert_Blazor.ServiceDefaults.Dtos.Enums
@using BidExpert_Blazor.Web.Services.HttpClients.Interfaces
@inject IUserClientApiService UserApiService
@using System.Globalization

<div class="border rounded-lg shadow-md overflow-hidden bg-white hover:shadow-xl transition-shadow flex flex-col h-full group">
    <div class="relative">
        <NavLink href="@($"/lots/{Lot?.PublicId ?? Lot?.Id}")" class="block">
            <img src="@(Lot?.ImageUrl ?? "https://placehold.co/600x400.png")" alt="Imagem @Lot?.Title" class="w-full h-48 object-cover"/>
        </NavLink>
        <button @onclick="ToggleFavorite" class="absolute top-2 right-2 bg-white/70 p-1.5 rounded-full text-gray-600 hover:text-red-500 hover:bg-white">
            @* Placeholder para ícone de coração. A classe 'text-red-500' seria aplicada se for favorito. *@
            <svg class="w-6 h-6 @(isFavorite ? "text-red-500" : "")" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"></path></svg>
        </button>
    </div>
    <div class="p-4 flex flex-col flex-grow">
        <h3 class="text-md font-semibold mb-2 truncate flex-grow">
            <NavLink href="@($"/lots/{Lot?.PublicId ?? Lot?.Id}")">@Lot?.Title</NavLink>
        </h3>
        <p class="text-xl font-bold text-gray-900 mb-3">@Lot?.Price.ToString("C", new CultureInfo("pt-BR"))</p>
        <div class="mt-auto">
            <NavLink href="@($"/lots/{Lot?.PublicId ?? Lot?.Id}")" class="w-full block text-center bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600">
                Ver Detalhes
            </NavLink>
        </div>
    </div>
</div>

@code {
    [Parameter] public LotDto? Lot { get; set; }
    private bool isFavorite; // Estado local para UI feedback imediato

    protected override void OnParametersSet()
    {
        // O DTO precisaria ter a informação se é favorito para o usuário atual.
        // Como não tem, vamos simular.
        // isFavorite = Lot?.IsFavorite ?? false;
    }

    private async Task ToggleFavorite()
    {
        if (Lot == null) return;
        isFavorite = !isFavorite; // UI feedback imediato
        var result = await UserApiService.ToggleFavoriteStatusAsync(Lot.Id);
        if (!result)
        {
            isFavorite = !isFavorite; // Reverter em caso de falha
        }
    }
}
