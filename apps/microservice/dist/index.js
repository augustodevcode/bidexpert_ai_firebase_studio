"use strict";var S=Object.create;var y=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,O=Object.prototype.hasOwnProperty;var k=(e,t,s,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of v(t))!O.call(e,o)&&o!==s&&y(e,o,{get:()=>t[o],enumerable:!(a=C(t,o))||a.enumerable});return e};var i=(e,t,s)=>(s=e!=null?S(E(e)):{},k(t||!e||!e.__esModule?y(s,"default",{value:e,enumerable:!0}):s,e));var h=i(require("fastify")),R=i(require("dotenv"));async function M(e,t){e.get("/health",async(s,a)=>({status:"ok",timestamp:new Date().toISOString()})),e.get("/api/v1/commission-rules",async(s,a)=>{try{let o={};return{default_commission_rate:.05,rules:[{for:"all",rate:.05}]}}catch(o){s.log.error("Failed to retrieve commission rules:",o),a.status(500).send({error:"Internal Server Error",message:"Could not retrieve commission rules."})}})}var f=M;var l=require("@bidexpert/core/lib/prisma"),m=class{async findByIdSimple(t){return l.prisma.userWin.findUnique({where:{id:t}})}async update(t,s){return l.prisma.userWin.update({where:{id:t},data:s})}};var g=require("@bidexpert/core/lib/prisma"),c=class{async createInstallments(t){return g.prisma.installmentPayment.createMany(t)}};var u=class{userWinRepository;checkoutRepository;constructor(){this.userWinRepository=new m,this.checkoutRepository=new c}async getCommissionRate(){let t={};return .05}async calculateTotals(t){let s=await this.userWinRepository.findByIdSimple(t);if(!s)throw new Error("Registro de arremate n\xE3o encontrado.");let a=await this.getCommissionRate(),o=s.winningBidAmount*a,r=s.winningBidAmount+o;return{winningBidAmount:s.winningBidAmount,commissionRate:a,commissionValue:o,totalDue:r}}async processPayment(t,s){let a=await this.userWinRepository.findByIdSimple(t);if(!a)return{success:!1,message:"Registro do arremate n\xE3o encontrado."};if(a.paymentStatus==="PAGO")return{success:!1,message:"Este arremate j\xE1 foi pago."};let o=await this.calculateTotals(t);console.log(`[MICROSERVICE - processPayment] Processing payment for win ID: ${t}`,{paymentData:s,totals:o}),await new Promise(r=>setTimeout(r,1500));try{if(s.paymentMethod==="credit_card")return await this.userWinRepository.update(t,{paymentStatus:"PAGO"}),{success:!0,message:"Pagamento \xE0 vista processado com sucesso!"};if(s.paymentMethod==="installments"){let r=s.installments||1,p=o.totalDue/r,F=Array.from({length:r},(b,I)=>({userWinId:t,installmentNumber:I+1,amount:p,dueDate:new Date,status:"PENDENTE"}));return await this.checkoutRepository.createInstallments({data:F}),await this.userWinRepository.update(t,{paymentStatus:"PROCESSANDO"}),{success:!0,message:`${r} boletos de parcelamento foram gerados com sucesso!`}}return{success:!1,message:"M\xE9todo de pagamento inv\xE1lido."}}catch(r){return console.error(`Error processing payment for win ${t}:`,r),{success:!1,message:`Erro no servidor ao processar pagamento: ${r.message}`}}}};async function W(e,t){let s=new u;e.get("/:winId/totals",async(a,o)=>{try{let r=await s.calculateTotals(a.params.winId);return o.send(r)}catch(r){a.log.error("Failed to calculate totals:",r),o.status(404).send({error:"Not Found",message:r.message})}}),e.post("/:winId/process-payment",async(a,o)=>{try{let r=await s.processPayment(a.params.winId,a.body);return r.success?o.send(r):o.status(400).send(r)}catch(r){a.log.error("Failed to process payment:",r),o.status(500).send({error:"Internal Server Error",message:r.message})}})}var d=W;var P=i(require("@fastify/helmet")),w=i(require("@fastify/cors"));R.default.config({path:"../../.env"});var n=(0,h.default)({logger:{transport:{target:"pino-pretty",options:{translateTime:"HH:MM:ss Z",ignore:"pid,hostname"}}}});n.register(P.default,{contentSecurityPolicy:!1});n.register(w.default,{origin:process.env.WEB_APP_URL||"http://localhost:9002",methods:["GET","POST","PUT","DELETE"]});n.register(f);n.register(d,{prefix:"/api/v1/checkout"});var T=async()=>{try{let e=process.env.MS_COMMISSION_PORT?parseInt(process.env.MS_COMMISSION_PORT,10):3001;await n.listen({port:e,host:"0.0.0.0"}),n.log.info(`Microservice is running at http://localhost:${e}`)}catch(e){n.log.error(e),process.exit(1)}};T();
