// prisma/models/Lot.prisma
model Lot {
  id                   BigInt      @id @default(autoincrement())
  publicId             BigInt      @unique @default(cuid())
  slug                 BigInt      @unique
  number               BigInt?
  title                BigInt
  description          BigInt?     @db.Text
  properties           BigInt?     @db.Text
  status               LotStatus   @default(RASCUNHO)
  price                Decimal     @db.Decimal(12, 2)
  initialPrice         Decimal?    @db.Decimal(12, 2)
  secondInitialPrice   Decimal?    @db.Decimal(12, 2)
  bidIncrementStep     Decimal?    @db.Decimal(12, 2)
  evaluationValue      Decimal?    @db.Decimal(12, 2)
  views                Int?        @default(0)
  bidsCount            Int?        @default(0)
  favoritesCount       Int?        @default(0)
  isFeatured           Boolean?    @default(false)
  isExclusive          Boolean?    @default(false)
  allowInstallmentBids Boolean?    @default(false)
  dataAiHint           BigInt?
  dataAiHintMainImage  BigInt?
  latitude             Decimal?    @db.Decimal(10, 8)
  longitude            Decimal?    @db.Decimal(11, 8)
  mapAddress           BigInt?
  endDate              DateTime?
  hasKey               Boolean?    @default(false)
  winningBidTermUrl    BigInt?
  additionalTriggers   Json?
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt

  tenantId             BigInt
  tenant               Tenant      @relation(fields: [tenantId], references: [id])

  auctionId            BigInt
  auction              Auction     @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  type                 BigInt
  categoryId           BigInt?
  category             LotCategory? @relation(fields: [categoryId], references: [id])
  subcategoryId        BigInt?
  subcategory          Subcategory? @relation(fields: [subcategoryId], references: [id])
  sellerId             BigInt?
  seller               Seller?     @relation(fields: [sellerId], references: [id])
  auctioneerId         BigInt?
  auctioneer           Auctioneer? @relation(fields: [auctioneerId], references: [id])
  winnerId             BigInt?
  winner               User?       @relation("WonLots", fields: [winnerId], references: [id])
  cityId               BigInt?
  city                 City?       @relation(fields: [cityId], references: [id])
  stateId              BigInt?
  state                State?      @relation(fields: [stateId], references: [id])

  imageUrl             BigInt?
  imageMediaId         BigInt?
  inheritedMediaFromAssetId BigInt?

  bids          Bid[]
  reviews       Review[]
  questions     LotQuestion[]
  userMaxBids   UserLotMaxBid[]
  wins          UserWin[]
  assets        AssetsOnLots[]
  stageDetails  LotStageDetails[]

  originalLotId BigInt? @unique
  relistedLot   Lot?    @relation("LotRelisting", fields: [originalLotId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  originalLot   Lot?    @relation("LotRelisting")
  isRelisted    Boolean? @default(false)
  relistCount   Int?    @default(0)

  @@index([auctionId])
  @@index([winnerId])
  @@index([tenantId])
}

model LotStageDetails {
    id            BigInt @id @default(autoincrement())
    lotId         BigInt
    stageId       BigInt
    lot           Lot       @relation(fields: [lotId], references: [id], onDelete: Cascade)
    stage         AuctionStage @relation(fields: [stageId], references: [id], onDelete: Cascade)
    initialBid    Decimal?  @db.Decimal(12, 2)
    bidIncrement  Decimal?  @db.Decimal(12, 2)

    @@unique([lotId, stageId])
}
