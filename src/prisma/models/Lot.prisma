// prisma/models/Lot.prisma
model Lot {
  id                   String      @id @default(cuid())
  publicId             String      @unique @default(cuid())
  slug                 String      @unique
  number               String?
  title                String
  description          String?     @db.Text
  properties           String?     @db.Text
  status               LotStatus   @default(RASCUNHO)
  price                Decimal     @db.Decimal(12, 2)
  initialPrice         Decimal?    @db.Decimal(12, 2)
  secondInitialPrice   Decimal?    @db.Decimal(12, 2)
  bidIncrementStep     Decimal?    @db.Decimal(12, 2)
  evaluationValue      Decimal?    @db.Decimal(12, 2)
  views                Int?        @default(0)
  bidsCount            Int?        @default(0)
  favoritesCount       Int?        @default(0)
  isFeatured           Boolean?    @default(false)
  isExclusive          Boolean?    @default(false)
  allowInstallmentBids Boolean?    @default(false)
  dataAiHint           String?
  dataAiHintMainImage  String?
  latitude             Decimal?    @db.Decimal(10, 8)
  longitude            Decimal?    @db.Decimal(11, 8)
  mapAddress           String?
  endDate              DateTime?
  hasKey               Boolean?    @default(false)
  winningBidTermUrl    String?
  additionalTriggers   Json?
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt

  tenantId             String
  tenant               Tenant      @relation(fields: [tenantId], references: [id])

  auctionId            String
  auction              Auction     @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  type                 String
  categoryId           String?
  category             LotCategory? @relation(fields: [categoryId], references: [id])
  subcategoryId        String?
  subcategory          Subcategory? @relation(fields: [subcategoryId], references: [id])
  sellerId             String?
  seller               Seller?     @relation(fields: [sellerId], references: [id])
  auctioneerId         String?
  auctioneer           Auctioneer? @relation(fields: [auctioneerId], references: [id])
  winnerId             String?
  winner               User?       @relation("WonLots", fields: [winnerId], references: [id])
  cityId               String?
  city                 City?       @relation(fields: [cityId], references: [id])
  stateId              String?
  state                State?      @relation(fields: [stateId], references: [id])

  imageUrl             String?
  imageMediaId         String?
  inheritedMediaFromAssetId String?

  bids          Bid[]
  reviews       Review[]
  questions     LotQuestion[]
  userMaxBids   UserLotMaxBid[]
  wins          UserWin[]
  assets        AssetsOnLots[]
  stageDetails  LotStageDetails[]

  originalLotId String? @unique
  relistedLot   Lot?    @relation("LotRelisting", fields: [originalLotId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  originalLot   Lot?    @relation("LotRelisting")
  isRelisted    Boolean? @default(false)
  relistCount   Int?    @default(0)

  @@index([auctionId])
  @@index([winnerId])
  @@index([tenantId])
}

model LotStageDetails {
    id            String @id @default(cuid())
    lotId         String
    stageId       String
    lot           Lot       @relation(fields: [lotId], references: [id], onDelete: Cascade)
    stage         AuctionStage @relation(fields: [stageId], references: [id], onDelete: Cascade)
    initialBid    Decimal?  @db.Decimal(12, 2)
    bidIncrement  Decimal?  @db.Decimal(12, 2)

    @@unique([lotId, stageId])
}
